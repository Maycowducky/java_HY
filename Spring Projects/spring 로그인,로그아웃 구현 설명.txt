로그인 가능 구현 과정을 정리

1. 로그인 링크를 추가
 
- home.jsp에 a태그를 이용
    - url : /member/login

2. 로그인 화면을 구성
 
- 컨트롤러에 메소드를 추가
    - url : /member/login
    - method: get
    - 화면 : /member/login
 
- login.jsp추가 및 화면을 구현
    - form 태그
    - url: /member/login
    - method : post

3. 로그인 기능 구현
 
- 컨트롤러에 메서드 추가
    - url: /member/login
    - method : post
    - 화면: /util/message
    - 화면에서 보낸 로그인정보(아이디와비번)을 콘솔에서 확인
    - 서비스에게 로그인 정보를 주면서 로그인 정보에 맞는 회원 정보를 달라고 요청
    - 가져온 회원 정보를 화면에 전달
    - 회원 정보에 따라 url과 msg를 화면에 전달

 - 서비스 메서드 추가 및 구현
    - 멤버 변수 체크
    - 다오에게 아이디를 주면서 회원정보를 가져오라고 시킴
    - 회원 정보가 없으면 null을 리턴
    - 있으면 passwordEncoder를 이용하여 비밀번호를 확인 후 일치하면 회원정보를 일치하지 않으면 null을 리턴

- Interceptor 패키지 생성
    - LoginInterceptor 클래스 생성 및 구현 : HandlerInterceptorAdapter 클래스를 상속
      - postHandle을 오버라이딩
         - 회원 정보가 있으면 세션에 추가
    - servlet-context.xml에 LoginInterceptor 등록 및 mapping
    - 로그인을 한 경우 home.jsp에 로그인과 회원가입이 안보이게 처리

4. 로그아웃
    - 로그아웃 링크를 추가 : home.jsp
    - 컨트롤러에 메서드 추가
    - url : /member/logout
    - method : post
    - 화면 : /util/message
    - 세션에 있는 회원 정보를 제거
    - 성공/실패 여부에 따라 msg와 url을 설정